package 탐욕;

import java.util.Scanner;

/**
 * 백준 11047번		// https://www.acmicpc.net/problem/11047
 * 
 * [ 문제 ]
 * 준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.
 * 동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다.
 * 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.
 * 
 * [ 입력 ]
 * 첫쨰줄: 동전의 개수, 목표 금액
 * 둘쨰줄~ 보유한 동전
10 4200
1
5
10
50
100
500
1000
5000
10000
50000

 * [ 출력 ]
 * 6
 *
 * 
 * [ 분석 ]
 * 그리디 알고리즘으로 풀 수 있도록 뒤의 동전 가격 A(i)가 앞에 나오는 동전 가격 A(i-1)의 배수가 된다는 조건이 부여됐음.
 * 즉, 동전을 최소로 사용하여 K를 만들기 위해서는 가장 가격이 큰 동전부터 차례대로 사용하면 됨
 * 
 * [ 설명 ]
 * 1. 가격이 큰 동전부터 내림차순으로 K보다 가격이 작거나 같은 동전이 나올 때까지 탐색한다.
 * 
 * 2. 탐색을 멈춘 동전의 가격으로 K를 나눠 몫은 동전의 개수에 더하고, 나머지는 K값으로 갱신한다.
 * 		ex) 4200 / 1000 = 4  	->  동전의 개수 4개 추가
 * 			4200 % 1000 = 200 	-> K = 200
 * 
 * 3. 과정 1~2를 나머지가 0이 될 때까지 반복한다.
 * 		ex) 200 / 100 = 2 		-> 동전 개수 2개 추가
 * 			200 % 100 = 0		-> K = 0
 * 			탐색을 종료하고 현재까지 나온 동전의 개수를 출력 		=> 4+2 = 6
 * 
 * [ 슈도 코딩 ]
 * N: 동전 개수
 * K: 목표 금액
 * A: 동전 데이터 배열
 * 
 * for(N만큼 반복)
 * {
 * 		A 배열 저장하기
 * }
 * 
 * // 가치가 큰 동전부터 선택해야 개수를 최소로 구성할 수 있음
 * for(N만큼 반복 -> N - 1 ~ 0으로 역순으로 반복하기)
 * {
 * 		if(현재 K보다 동전 가치가 작으면) {
 * 			동전 수 += 목표 금액 / 현재 동전 가치
 * 			목표 금액 = 목표 금액 % 현재 동전 가치
 * 		}
 * }
 * 
 * 누적된 동전 수 출력하기
 * 
 * **/
public class 동전개의_최솟값_구하기 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int K = sc.nextInt();
		int[] A = new int[N];
		
		for(int i=0; i<N; i++) {
			A[i] = sc.nextInt();
		}
		
		int count = 0;
		for(int i=N-1; i>=0; i--) {
			int coin = A[i];
			if(coin <= K) {				// 현재 동전의 가치가 K보다 작거나 같으면 구성에 추가
				count += (K / coin);	// 목표금액 K를 coin으로 나눈 해는 count로
				K = K % coin;			// 나머지는 목표금액 K로 초기화
			}
		}
		
		System.out.println(count);
	}

}
